"use strict";
exports.__esModule = true;
var rmoas_types_1 = require("oas/dist/rmoas.types");
function harValue(type, value) {
    if (!value.value)
        return undefined;
    return { type: type, value: value };
}
function configureSecurity(apiDefinition, values, scheme) {
    var _a, _b;
    if (!scheme)
        return undefined;
    if (Object.keys(values || {}).length === 0)
        return undefined;
    if (!apiDefinition.components.securitySchemes[scheme])
        return undefined;
    var security = apiDefinition.components.securitySchemes[scheme];
    if ((0, rmoas_types_1.isRef)(security)) {
        return undefined;
    }
    else if (!values[scheme]) {
        // If we don't have any data for this auth scheme then we shouldn't add it.
        return false;
    }
    if (security.type === 'http') {
        if (security.scheme === 'basic') {
            var auth = values[scheme];
            if (typeof auth !== 'object')
                return false;
            if (!auth.user && !auth.pass)
                return false;
            var user = (_a = auth.user) !== null && _a !== void 0 ? _a : null;
            if (user === null || user.length === 0) {
                user = '';
            }
            var pass = (_b = auth.pass) !== null && _b !== void 0 ? _b : null;
            if (pass === null || pass.length === 0) {
                pass = '';
            }
            return harValue('headers', {
                name: 'authorization',
                value: "Basic ".concat(Buffer.from("".concat(user, ":").concat(pass)).toString('base64'))
            });
        }
        else if (security.scheme === 'bearer') {
            return harValue('headers', {
                name: 'authorization',
                value: "Bearer ".concat(values[scheme])
            });
        }
    }
    if (security.type === 'apiKey') {
        if (security["in"] === 'query') {
            return harValue('queryString', {
                name: security.name,
                value: String(values[scheme])
            });
        }
        else if (security["in"] === 'header') {
            var header = {
                name: security.name,
                value: String(values[scheme])
            };
            if (security['x-bearer-format']) {
                // Uppercase: token -> Token
                var bearerFormat = security['x-bearer-format'].charAt(0).toUpperCase() + security['x-bearer-format'].slice(1);
                header.name = security.name;
                header.value = "".concat(bearerFormat, " ").concat(header.value);
            }
            return harValue('headers', header);
        }
        else if (security["in"] === 'cookie') {
            return harValue('cookies', {
                name: security.name,
                value: String(values[scheme])
            });
        }
    }
    if (security.type === 'oauth2') {
        return harValue('headers', {
            name: 'authorization',
            value: "Bearer ".concat(values[scheme])
        });
    }
    return undefined;
}
exports["default"] = configureSecurity;
