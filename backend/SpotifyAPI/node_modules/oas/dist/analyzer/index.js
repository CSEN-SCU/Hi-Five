"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (g && (g = 0, op[0] && (_ = 0)), _) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var OPENAPI_QUERIES = __importStar(require("./queries/openapi"));
var README_QUERIES = __importStar(require("./queries/readme"));
/**
 * Analyze a given OpenAPI or Swagger definition for any OpenAPI, JSON Schema, and ReadMe-specific
 * feature uses it may contain.
 *
 * @todo this might be worth moving into the `oas` package at some point
 */
function analyzer(definition) {
    return __awaiter(this, void 0, void 0, function () {
        var additionalProperties, callbacks, circularRefs, discriminators, links, parameterSerialization, polymorphism, serverVariables, webhooks, xml, authDefaults, codeSampleLanguages, customCodeSamples, codeSamplesDisabled, disabledCorsProxy, explorerDisabled, staticHeaders, rawBody, analysis;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    additionalProperties = OPENAPI_QUERIES.additionalProperties(definition);
                    callbacks = OPENAPI_QUERIES.callbacks(definition);
                    return [4 /*yield*/, OPENAPI_QUERIES.circularRefs(definition)];
                case 1:
                    circularRefs = _a.sent();
                    discriminators = OPENAPI_QUERIES.discriminators(definition);
                    links = OPENAPI_QUERIES.links(definition);
                    parameterSerialization = OPENAPI_QUERIES.parameterSerialization(definition);
                    polymorphism = OPENAPI_QUERIES.polymorphism(definition);
                    serverVariables = OPENAPI_QUERIES.serverVariables(definition);
                    webhooks = OPENAPI_QUERIES.webhooks(definition);
                    xml = OPENAPI_QUERIES.xml(definition);
                    authDefaults = README_QUERIES.authDefaults(definition);
                    codeSampleLanguages = README_QUERIES.codeSampleLanguages(definition);
                    customCodeSamples = README_QUERIES.customCodeSamples(definition);
                    codeSamplesDisabled = README_QUERIES.codeSamplesDisabled(definition);
                    disabledCorsProxy = README_QUERIES.corsProxyDisabled(definition);
                    explorerDisabled = README_QUERIES.explorerDisabled(definition);
                    staticHeaders = README_QUERIES.staticHeaders(definition);
                    rawBody = README_QUERIES.rawBody(definition);
                    analysis = {
                        general: {
                            mediaTypes: {
                                name: 'Media Type',
                                found: OPENAPI_QUERIES.mediaTypes(definition),
                            },
                            operationTotal: {
                                name: 'Operation',
                                found: OPENAPI_QUERIES.totalOperations(definition),
                            },
                            securityTypes: {
                                name: 'Security Type',
                                found: OPENAPI_QUERIES.securityTypes(definition),
                            },
                        },
                        openapi: {
                            additionalProperties: {
                                present: !!additionalProperties.length,
                                locations: additionalProperties,
                            },
                            callbacks: {
                                present: !!callbacks.length,
                                locations: callbacks,
                            },
                            circularRefs: {
                                present: !!circularRefs.length,
                                locations: circularRefs,
                            },
                            discriminators: {
                                present: !!discriminators.length,
                                locations: discriminators,
                            },
                            links: {
                                present: !!links.length,
                                locations: links,
                            },
                            style: {
                                present: !!parameterSerialization.length,
                                locations: parameterSerialization,
                            },
                            polymorphism: {
                                present: !!polymorphism.length,
                                locations: polymorphism,
                            },
                            serverVariables: {
                                present: !!serverVariables.length,
                                locations: serverVariables,
                            },
                            webhooks: {
                                present: !!webhooks.length,
                                locations: webhooks,
                            },
                            xml: {
                                present: !!xml.length,
                                locations: xml,
                            },
                        },
                        readme: {
                            'x-default': {
                                present: !!authDefaults.length,
                                locations: authDefaults,
                            },
                            'x-readme.code-samples': {
                                present: !!customCodeSamples.length,
                                locations: customCodeSamples,
                            },
                            'x-readme.headers': {
                                present: !!staticHeaders.length,
                                locations: staticHeaders,
                            },
                            'x-readme.explorer-enabled': {
                                present: !!explorerDisabled.length,
                                locations: explorerDisabled,
                            },
                            'x-readme.proxy-enabled': {
                                present: !!disabledCorsProxy.length,
                                locations: disabledCorsProxy,
                            },
                            'x-readme.samples-languages': {
                                present: !!codeSampleLanguages.length,
                                locations: codeSampleLanguages,
                            },
                        },
                    };
                    // We should only surface analysis for deprecated features and extensions if they have them as
                    // there's no reason to give them information about something they can't use and should no longer
                    // know about.
                    if (codeSamplesDisabled.length) {
                        analysis.readme['x-readme.samples-enabled'] = {
                            present: !!codeSamplesDisabled.length,
                            locations: codeSamplesDisabled,
                        };
                    }
                    if (rawBody.length) {
                        analysis.readme.raw_body = {
                            present: !!rawBody.length,
                            locations: rawBody,
                        };
                    }
                    return [2 /*return*/, analysis];
            }
        });
    });
}
exports.default = analyzer;
